2019-12-09 19:07:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:07:15 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:09:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:09:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:10:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:10:28 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:13:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:13:59 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:21:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:21:36 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:23:18 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:26:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:26:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:27:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:27:27 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-09 19:28:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-09 19:28:33 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 09:36:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 09:36:24 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 09:47:22 jdbc[11]: null
org.h2.message.DbException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.get(DbException.java:179)
	at org.h2.message.DbException.get(DbException.java:155)
	at org.h2.message.DbException.get(DbException.java:144)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:184)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:126)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:99)
	at org.h2.Driver.connect(Driver.java:69)
	at java.sql.DriverManager.getConnection(DriverManager.java:664)
	at java.sql.DriverManager.getConnection(DriverManager.java:247)
	at sec.project.config.MessageService.getMessages(MessageService.java:28)
	at sec.project.controller.MainController.loadMessages(MainController.java:25)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:220)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:116)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:963)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:897)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:230)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:317)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:115)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:121)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:331)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:214)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:89)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:192)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:165)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:108)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:349)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:784)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:802)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1410)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.h2.jdbc.JdbcSQLException: The connection was not closed by the application and is garbage collected [90018-193]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:345)
	... 98 more
2019-12-10 09:49:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 09:49:42 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 10:07:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 10:07:53 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 10:08:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 10:08:29 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 10:21:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 10:21:47 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 10:24:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 10:24:58 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
2019-12-10 10:38:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "MESSAGES" already exists; SQL statement:
CREATE TABLE Messages (message varchar, username varchar(30)) [42101-193]
2019-12-10 10:38:34 jdbc[3]: exception
org.h2.jdbc.JdbcSQLException: Table "USERS" already exists; SQL statement:
CREATE TABLE Users (username varchar(30), password varchar(30), funds INTEGER, PRIMARY KEY(username)) [42101-193]
